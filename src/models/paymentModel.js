import mongoose from "mongoose";

const paymentSchema = new mongoose.Schema({
  user: { type: mongoose.Schema.Types.ObjectId, ref: "user", required: true },
  plan: { type: mongoose.Schema.Types.ObjectId, ref: "plan", required: true },
  cashfreeOrderId: { type: String, required: true },
  cashfreePaymentId: { type: String },
  cashfreeSignature: { type: String },
  amount: { type: Number, required: true },
  status: { 
    type: String, 
    enum: ["pending", "success", "failed"], 
    default: "pending" 
  },
  createdAt: { type: Date, default: Date.now },
});

const Payment = mongoose.model("payment", paymentSchema);
export default Payment;

// import mongoose from "mongoose";

// const paymentSchema = new mongoose.Schema({
//   user: { type: mongoose.Schema.Types.ObjectId, ref: "user", required: true },
//   plan: { type: mongoose.Schema.Types.ObjectId, ref: "plan", required: true },

//   // Paytm-specific fields
//   paytmOrderId: { type: String, required: true },       // The order ID generated by your server
//   paytmTransactionId: { type: String },                 // Transaction ID returned by Paytm after payment
//   paytmChecksumHash: { type: String },                 // Checksum to verify payment (optional but recommended)
  
//   amount: { type: Number, required: true },
//   status: { type: String, enum: ["pending", "success", "failed"], default: "pending" },

//   createdAt: { type: Date, default: Date.now },
// });

// const Payment = mongoose.model("payment", paymentSchema);
// export default Payment;
